<?php

/**
 * @file
 * Use this module to administer the company via the website
 * TODO:
 */

/**
 * Implementation of hook_permission()
 * TODO: Box Office Administration
 */
function tasks_permission() {
  return array(
    'email members' => array(
      'description' => t('Permission to allow member to send email'),
      'title' => t('Email Members'),
    ),
    'email group' => array(
      'description' => t('Permissions to allow member to create email group'),
      'title' => t('Add Email Group'),
    ),
    'administer box office' => array(
      'description' => t('Permission to allow member to edit box office settings'),
      'title' => t('Administer Box Office')
    ),
    'box office orders' => array(
      'description' => t('Permission to allow user to interact with ticket orders'),
      'title' => t('Box Office Order')
    ),
    'box office delete' => array(
      'description' => t('Permission to delete an order from the database.'),
      'title' => t('Box Office Order Delete')
    )
  );
}

/**
 * Implementation of hook_menu()
 */
function tasks_menu() {
	 $items = array();

	/* Email Items */
	 $items['email'] = array(
		  'title' => 'Email',
		  'descriptions' => 'Page to email members in database.',
		  'page callback' => 'drupal_get_form',
		  'page arguments' => array('tasks_email'),
		  'access callback' => 'user_access',
		  'access arguments' => array('email members'),
		  'type' => MENU_NORMAL_ITEM,
		  'file' => 'email.inc',
	 );
	 $items['email/groups'] = array(
		  'title' => 'Groups',
		  'descriptions' => 'Page to define groups.',
 		 'page callback' => 'tasks_groups_hello',
	 	 'access callback' => 'user_access',
		  'access arguments' => array('email group'),
		  'type' => MENU_NORMAL_ITEM,
		  'file' => 'email.inc',
	 );
	 $items['email/groups/default'] = array(
	 	 'type' => MENU_DEFAULT_LOCAL_TASK,
	 	 'title' => 'Current Groups',
	 	 'weight' => 1,
	 );
	 $items['email/groups/add'] = array(
	 	 'title' => 'Add Group',
	 	 'description' => 'Page to add group to send email to',
	 	 'page callback' => 'drupal_get_form',
	 	 'page arguments' => array('tasks_groups_add'),
	 	 'access callback' => 'user_access',
	 	 'access arguments' => array('email group'),
	 	 'type' => MENU_LOCAL_TASK,
	 	 'file' => 'email.inc',
	 	 'weight' => 2,
	 );

	 $items['email/groups/list/%'] = array(
	 	 'title' => 'List Members in Group',
	 	 'description' => 'Use this page to view who is in a group',
	 	 'page callback' => 'tasks_list_members',
    'page arguments' => array(3),
	 	 'access callback' => 'user_access',
	 	 'access arguments' => array('email group'),
	 	 'type' => MENU_LOCAL_TASK,
	 	 'file' => 'email.inc',
	 	 'weight' => 2.1,
	 );
  	 $items['email/groups/edit'] = array(
	 	 'title' => 'Edit Group',
		  'description' => 'Page to edit groups to send email to',
		  'page callback' => 'tasks_groups_edit',
		  'access callback' => 'user_access',
		  'access arguments' => array('email group'),
		  'type' => MENU_LOCAL_TASK,
		  'file' => 'email.inc',
		  'weight' => 3,
	 );

	 /* Season Ticket Menus Items */
	 $items['admin/config/RULTC/box_office'] = array(
	 	 'title' => 'Box Office Configuration',
	 	 'description' => 'Options for Box Office',
	 	 'page callback' => 'tasks_tickets_admin',
	 	 'access arguments' => array('administer site configuraiton'),
		  'type' => MENU_NORMAL_ITEM,
		  'file' => 'tickets.inc',
	 );
	 $items['box_office'] = array(
	 	 'title' => 'Box Office',
	 	 'description' => 'Box Office',
	 	 'page callback' => 'tasks_tickets_hello',
	 	 'access callback' => TRUE,
	 	 'type' => MENU_NORMAL_ITEM,
	 	 'file' => 'tickets.inc',
	 	 'menu_name' => 'main-menu',
	 	 'weight' => 2,
	 );
	 $items['box_office/purchase'] = array(
	 	 'title' => 'Purchase Tickets',
	 	 'description' => 'Submit an order for tickets',
    'page callback' => 'tasks_tickets_order',
	 	 'access callback' => TRUE,
	 	 'file' => 'tickets.inc',
	 	 'type' => MENU_CALLBACK,
	 );
  $items['box_office/purchase/download'] = array(
    'title' => 'Order Confirmation',
    'description' => 'A recipet of purcahse',
    'page callback' => 'tasks_download_page',
    'access callback' => TRUE,
    'file' => 'tickets.inc',
    'type' => MENU_CALLBACK,
  );

  // Box Office Admin Menu Items Follow
	 $items['box_office/admin'] = array(
	 	 'title' => 'Box Office Admin',
	 	 'description' => 'Box Office administration',
	 	 'page callback' => 'tasks_tickets_default',
	 	 'access callback' => 'user_access',
    'access arguments' => array('administer box office'),
	 	 'type' => MENU_NORMAL_ITEM,
	 	 'menu_name' => 'navigation',
	 	 'file' => 'tickets.admin.inc',
	 );

 /*$items['box_office/admin/tickets'] = array(
		'title' => 'Box Office Tickets',
		'description' => 'Box Office tickets',
		'page callback' => 'tasks_tickets_default',
		'access callback' => TRUE,
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'menu_name' => 'navigation',
		'file' => 'tickets.admin.inc',
	);*/
  $items['admin/config/RULTC/box_office'] = array(
    'title' => 'Box Office Settings',
	 	 'description' => 'Settings for box office',
	 	 'page callback' => 'tasks_boxoffice_intro',
		  'access callback' => TRUE,
				'access argument' => array('administer site configuration'),
		  'type' => MENU_LOCAL_TASK,
		  'file' => 'tickets.admin.inc',
		  'weight' => 6,
  );

		$items['box_office/admin'] = array(
				'title' => 'Box Office Administration',
				'description' => 'Administration options for the box office',
				'page callback' => 'tasks_tickets_default',
				'access callback' => 'user_access',
				'access arguments' => array('administer box office'),
				'type' => MENU_NORMAL_ITEM,
				'menu' => 'navigation',
				'file' => 'tickets.admin.inc',
		);
		$items['box_office/admin/default'] = array(
				'type' => MENU_DEFAULT_LOCAL_TASK,
				'title' => 'Tickets',
		);

  $items['box_office/admin/orders'] = array(
    'title' => 'Orders',
    'description' => 'This section is for dealing with submitted ticket orders',
    'page callback' => 'tasks_boxoffice_suborders',
    'access callback' => 'user_access',
    'access arguments' => array('box office orders'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 5,
    'file' => 'tickets.admin.inc',
  );

  $items['box_office/admin/orders/default'] = array(
    'title' => 'Ticket Orders',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['box_office/admin/orders/download'] = array(
	 	 'title' => 'Download List',
	 	 'description' => 'Download CSV',
	 	 'page callback' => 'tasks_tickets_csv',
	 	 'access callback' => 'user_access',
    'access arguments' => array('box office orders'),
	 	 'type' => MENU_CALLBACK,
	 	 'file' => 'tickets.admin.inc',
  );
	 $items['box_office/admin/orders/mail'] = array(
	 	 'title' => 'Mailing List',
	 	 'description' => 'Table of mailing list for ticket orders',
	 	 'page callback' => 'tasks_boxoffice_submail',
	 	 'access callback' => 'user_access',
    'access arguments' => array('box office orders'),
	 	 'type' => MENU_LOCAL_TASK,
	 	 'file' => 'tickets.admin.inc',
		  'weight' => 2,
	 );
	 $items['box_office/admin/orders/seat'] = array(
	 	 'title' => 'Seating List',
	 	 'description' => 'Table of prefered seats for season ticket holders',
	 	 'page callback' => 'tasks_boxoffice_subseat',
    'access callback' => 'user_access',
    'access arguments' => array('box office orders'),
	 	 'type' => MENU_LOCAL_TASK,
	 	 'file' => 'tickets.admin.inc',
	 	 'weight' => 3,
	 );
  $items['box_office/admin/orders/delete'] = array(
	 	 'title' => 'Delete Order',
	 	 'description' => 'Option to delete order from database.',
	 	 'page callback' => 'tasks_boxoffice_delete',
    'access callback' => 'user_access',
    'access arguments' => array('box office delete'),
	 	 'type' => MENU_LOCAL_TASK,
	 	 'file' => 'tickets.admin.inc',
	 	 'weight' => 4,
  );

 /*$items['box_office/admin/tickets/default'] = array(
  'title' => 'Box Office Tickets',
		'description' => 'Box Office tickets',
  'type' => MENU_DEFAULT_LOCAL_TASK,
 );
	$items['box_office/admin/tickets/add'] = array(
		'title' => 'Add Ticket',
		'description' => 'Box Office administration',
		'page callback' => 'tasks_tickets_add',
		'access callback' => TRUE,
		'type' => MENU_LOCAL_TASK,
		'file' => 'tickets.admin.inc',
		'weight' => 2,
	);
	$items['box_office/admin/tickets/edit'] = array(
		'title' => 'Edit Ticket',
		'description' => 'Box Office administration',
		'page callback' => 'tasks_tickets_update',
		'access callback' => TRUE,
		'type' => MENU_LOCAL_TASK,
		'file' => 'tickets.admin.inc',
		'weight' => 3,
	);
	$items['box_office/admin/tickets/delete'] = array(
		'title' => 'Delete Ticket',
		'description' => 'Box Office administration',
		'page callback' => 'tasks_tickets_delete',
		'access callback' => TRUE,
		'type' => MENU_LOCAL_TASK,
		'file' => 'tickets.admin.inc',
		'weight' => 4,
	);*/

  $items['admin/config/RULTC/email'] = array(
    'title' => 'Email Settings',
    'description' => 'Settings for the Email System',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tasks_email_settings'),
    'access callback' => TRUE,
  );

  return $items;
}

function tasks_email_settings($form, &$form_state) {
 $form = array();

 $form['tasks_email_status'] = array(
   '#type' => 'select',
   '#title' => t('Email System Status'),
   '#options' => drupal_map_assoc(array('On', 'Off'), 'check_plain'),
   '#description' => t('Setting this value turns the email system on or off.'),
   '#default_value' => variable_get('tasks_email_status', 'Off'),
 );

 return system_settings_form($form);
}

/**
 * Implementation of hook_admin_paths()
 */
function tasks_admin_paths() {
	$paths = array(
    'box_office/admin' => TRUE,
    'box_office/admin/*' => TRUE,
  );
  return $paths;
}

/**
 * Implementation of hook_views_api()

function tasks_views_api() {
  return ( array(
    'api' => 3,
  ));
}

/**
 * Implementation of hook_views_data()
 */

function tasks_views_data() {
  $data['tickets_orders']['table']['group'] = t('Tickets');
  $data['tickets_orders']['table']['base'] = array(
    'field' => 'unique_id',
    'title' => t('Tickets'),
    'help' => t('Stores information about ticket orders.'),
    'weight' => 10,
  );

  // Following are the fields of the table 'tickets_orders'
  // Field:unique_id
  $data['tickets_orders']['unique_id'] = array(
    'title' => t('Unique ID'),
    'help' => t('Unique ID of the ticket order.'),
    'field' => array(
      'handler' => 'views_handler_field_numeric',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_numeric',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Field: orderid
  $data['tickets_orders']['orderid'] = array(
    'title' => t('Order ID'),
    'help' => t('Order ID for the order.'),
    'field' => array(
      'handler' => 'views_handler_field',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Field: seasonid
  $data['tickets_orders']['seasonid'] = array(
    'title' => t('Season'),
    'help' => t('Season of the order.'),
    'field' => array(
      'handler' => 'views_handler_field_numeric',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_numeric',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Field: fname
  $data['tickets_orders']['fname'] = array(
    'title' => t('First Name'),
    'help' => t('Orderer\'s First Name.'),
    'field' => array(
      'handler' => 'views_handler_field',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Field: lname
  $data['tickets_orders']['lname'] = array(
    'title' => t('Last Name'),
    'help' => t('Orderer\'s Last Name.'),
    'field' => array(
      'handler' => 'views_handler_field',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

    // Field: email
  $data['tickets_orders']['email'] = array(
    'title' => t('Email Address'),
    'help' => t('Orderer\'s Email Address.'),
    'field' => array(
      'handler' => 'views_handler_field',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Field: city
  $data['tickets_orders']['city'] = array(
    'title' => t('City'),
    'help' => t('Orderer\'s City.'),
    'field' => array(
      'handler' => 'views_handler_field',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Field: state
  $data['tickets_orders']['state'] = array(
    'title' => t('State'),
    'help' => t('Orderer\'s State.'),
    'field' => array(
      'handler' => 'views_handler_field',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Field: zip
  $data['tickets_orders']['zip'] = array(
    'title' => t('Zip Code'),
    'help' => t('Orderer\'s Zip Code.'),
    'field' => array(
      'handler' => 'views_handler_field_numeric',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_numeric',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Field: night
  $data['tickets_orders']['night'] = array(
    'title' => t('Reservation Night'),
    'help' => t('Orderer\'s Night.'),
    'field' => array(
      'handler' => 'views_handler_field',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Field: nightnum
  $data['tickets_orders']['nightnum'] = array(
    'title' => t('Show Number'),
    'help' => t('Orderer\'s show preference (numeric).'),
    'field' => array(
      'handler' => 'views_handler_field_numeric',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_numeric',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Field: preference
  $data['tickets_orders']['preference'] = array(
    'title' => t('Reservation Preference'),
    'help' => t('Orderer\'s reservation preference (location).'),
    'field' => array(
      'handler' => 'views_handler_field',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Field: qty
  $data['tickets_orders']['qty'] = array(
    'title' => t('Ticket Quantity'),
    'help' => t('Quantity of tickets ordered.'),
    'field' => array(
      'handler' => 'views_handler_field_numeric',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_numeric',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Field: donation
  $data['tickets_orders']['donation'] = array(
    'title' => t('Donation'),
    'help' => t('Amount of donation (if any)'),
    'field' => array(
      'handler' => 'views_handler_field_numeric',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_numeric',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Field: total
  $data['tickets_orders']['total'] = array(
    'title' => t('Order Total'),
    'help' => t('Total amount of order.'),
    'field' => array(
      'handler' => 'views_handler_field_numeric',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_numeric',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Field: paid
  $data['tickets_orders']['paid'] = array(
    'title' => t('Payment Status'),
    'help' => t('Status of payment for order.'),
    'field' => array(
      'handler' => 'views_handler_field_boolean',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_field_boolean_operator',
      'label' => t('Paid'),
      'type' => 'yes-no',
      'use equal' => TRUE,
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Field: timestamp
  $data['tickets_orders']['timestamp'] = array(
    'title' => t('Timestamp'),
    'help' => t('Time order was placed.'),
    'field' => array(
      'handler' => 'views_handler_field_date',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_date',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort_date',
    ),
  );
  return $data;
}